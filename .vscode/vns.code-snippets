{
  // Place your vulcan-next-starter workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "style-jsx": {
    "prefix": "style-jsx",
    "scope": "typescriptreact,javascriptreact", // tsx, jsx
    "body": ["<style jsx>{`\n\t$1\n`}</style>"],
    "description": "Local Styled JSX tag"
  },
  "Storybook story": {
    "scope": "typescriptreact",
    "prefix": "story",
    "body": [
      "import React from \"react\"",
      "import { $1 } from \"../$1\"",
      "// import { action } from \"@storybook/addon-actions\";",
      "",
      "const defaultProps= {",
      "}",
      "",
      "export default {",
      "  title: \"$2/$1\",",
      "  component: $1",
      "//  decoractors: [(storyFn) => <div>{storyFn()}</div>",
      "};",
      "",
      "export const basic = () => (<$1 {...defaultProps} />)",
      "basic.story = {",
      "  name: \"default props\"",
      "  // decorators: [...],",
      "  // parameters: {...}",
      "};"
    ]
  }
}
